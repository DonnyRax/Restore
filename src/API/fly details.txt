Postgres cluster donnystore-db created
  Username:    postgres
  Password:    Fg03SDgCsOJiRL3
  Hostname:    donnystore-db.internal
  Flycast:     fdaa:2:cbad:0:1::2
  Proxy port:  5432
  Postgres port:  5433
  Connection string: postgres://postgres:Fg03SDgCsOJiRL3@donnystore-db.flycast:5432

DATABASE_URL=postgres://donnystore:gf64BKO2rsaTbIY@donnystore-db.flycast:5432/donnystore?sslmode=disable


string connString;
if (builder.Environment.IsDevelopment())
    connString = builder.Configuration.GetConnectionString("DefaultConnection");
else
{
    // Use connection string provided at runtime by FlyIO.
    var connUrl = Environment.GetEnvironmentVariable("DATABASE_URL");

    // Parse connection URL to connection string for Npgsql
    connUrl = connUrl.Replace("postgres://", string.Empty);
    var pgUserPass = connUrl.Split("@")[0];
    var pgHostPortDb = connUrl.Split("@")[1];
    var pgHostPort = pgHostPortDb.Split("/")[0];
    var pgDb = pgHostPortDb.Split("/")[1];
    var pgUser = pgUserPass.Split(":")[0];
    var pgPass = pgUserPass.Split(":")[1];
    var pgHost = pgHostPort.Split(":")[0];
    var pgPort = pgHostPort.Split(":")[1];
    var updatedHost = pgHost.Replace(“flycast”, “internal”);

    connString = $"Server={updatedHost};Port={pgPort};User Id={pgUser};Password={pgPass};Database={pgDb};";
}
builder.Services.AddDbContext<StoreContext>(opt =>
{
    opt.UseNpgsql(connString);
});
